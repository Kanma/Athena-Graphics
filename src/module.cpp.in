/** @file   module.cpp
    @author Philip Abbet

    Module-wide declarations and functions of the Athena-Graphics module.

    This file is auto-generated by the CMake build system.
*/

#include <Athena-Graphics/Prerequisites.h>
#include <Athena-Graphics/Visual/Camera.h>
#include <Athena-Graphics/Visual/DirectionalLight.h>
#include <Athena-Graphics/Visual/Object.h>
#include <Athena-Graphics/Visual/Plane.h>
#include <Athena-Graphics/Visual/PointLight.h>
#include <Athena-Graphics/Visual/Spotlight.h>
#include <Athena-Graphics/Visual/World.h>
#include <Athena-Graphics/Debug/AudioListener.h>
#include <Athena-Graphics/Debug/AudioSource.h>
#include <Athena-Graphics/Debug/Axes.h>
#include <Athena-Graphics/Debug/Camera.h>
#include <Athena-Graphics/Debug/DirectionalLight.h>
#include <Athena-Graphics/Debug/PointLight.h>
#include <Athena-Graphics/Debug/Skeleton.h>
#include <Athena-Graphics/Debug/Spotlight.h>
#include <Athena-Entities/ComponentsManager.h>
#include <Ogre/OgreRoot.h>

#if ATHENA_GRAPHICS_SCRIPTING
    #include <Athena-Graphics/Scripting.h>
#endif

using namespace Athena::Entities;


namespace Athena {
namespace Graphics {

    const char* VERSION = "@ATHENA_GRAPHICS_VERSION_MAJOR@.@ATHENA_GRAPHICS_VERSION_MINOR@.@ATHENA_GRAPHICS_VERSION_PATCH@@ATHENA_GRAPHICS_VERSION_SUFFIX@";


    Ogre::Root* initialize(const std::string& strPluginFileName,
                           const std::string& strOgreConfigFileName,
                           const std::string& strOgreLogFileName)
    {
        assert(ComponentsManager::getSingletonPtr());
        assert(!Ogre::Root::getSingletonPtr());

        ComponentsManager* pComponentsManager = ComponentsManager::getSingletonPtr();

        // Register the visual components
        pComponentsManager->registerType<Visual::Camera>();
        pComponentsManager->registerType<Visual::DirectionalLight>();
        pComponentsManager->registerType<Visual::EntityComponent>();
        pComponentsManager->registerType<Visual::Object>();
        pComponentsManager->registerType<Visual::Plane>();
        pComponentsManager->registerType<Visual::PointLight>();
        pComponentsManager->registerType<Visual::Spotlight>();
        pComponentsManager->registerType<Visual::VisualComponent>();
        pComponentsManager->registerType<Visual::World>();

        // Register the debug components
        pComponentsManager->registerType<Debug::AudioListener>();
        pComponentsManager->registerType<Debug::AudioSource>();
        pComponentsManager->registerType<Debug::Axes>();
        pComponentsManager->registerType<Debug::Camera>();
        pComponentsManager->registerType<Debug::DebugComponent>();
        pComponentsManager->registerType<Debug::DirectionalLight>();
        pComponentsManager->registerType<Debug::PointLight>();
        pComponentsManager->registerType<Debug::Skeleton>();
        pComponentsManager->registerType<Debug::Spotlight>();

        return new Ogre::Root(strPluginFileName, strOgreConfigFileName, strOgreLogFileName);
    }

}
}
